package br.com.compass.bank.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@AllArgsConstructor
@NoArgsConstructor
@Builder
@Getter
@Setter
@Entity
@Table(
        name = "t_account",
        uniqueConstraints = {
                @UniqueConstraint(columnNames = {"user_id", "account_type"})
        }
)
public class Account {

    /**
     * The unique identifier for the account.
     * This value is automatically generated by the database.
     */
    @Column(name = "id", unique = true, nullable = false, updatable = false)
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The user associated with this account.
     * A user can have multiple accounts, but each account is linked to one user.
     */
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    /**
     * The hashed password used for account login.
     * This field stores the password in a hashed format for security.
     */
    @Column(name = "password_hash", nullable = false)
    private String password;

    /**
     * The type of the account (e.g., checking, savings, etc.).
     * The type is stored as a string in the database, using the enum value.
     */
    @Column(name = "account_type", nullable = false)
    @Enumerated(EnumType.STRING)
    private AccountType type;
}
